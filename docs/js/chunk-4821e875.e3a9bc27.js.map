{"version":3,"sources":["webpack:///../../../src/mixins/delayable/index.ts","webpack:///../../../src/mixins/activatable/index.ts","webpack:///../../../src/mixins/detachable/index.ts","webpack:///../../../src/mixins/dependent/index.ts","webpack:///../../../src/mixins/stackable/index.ts","webpack:///../../../src/mixins/menuable/index.ts"],"names":["name","props","openDelay","type","Number","default","closeDelay","data","openTimeout","closeTimeout","undefined","methods","clearDelay","clearTimeout","this","runDelay","delay","parseInt","setTimeout","cb","open","close","baseMixins","activator","validator","val","includes","disabled","internalActivator","openOnHover","openOnFocus","Boolean","activatorElement","activatorNode","events","listeners","watch","mounted","slotType","beforeDestroy","addActivatorEvents","keys","Object","key","genActivator","node","on","attrs","genActivatorAttributes","role","String","genActivatorListeners","e","getActivator","target","length","vm","m","getContentSlot","getValueProxy","self","removeActivatorEvents","resetActivator","validateAttachTarget","Node","attach","contentClass","hasDetached","hasContent","beforeMount","Array","deactivated","$refs","content","console","getScopeIdAttrs","scopeId","initDetach","_isDestroyed","document","searchChildren","results","index","children","child","closeDependents","isActive","isDependent","openDependents","getOpenDependents","getOpenDependentElements","result","getClickableDependentElements","overlay","stackElement","stackExclude","stackMinZIndex","computed","activeZIndex","window","getMaxZIndex","exclude","base","zis","activeElements","Math","mixins","allowOverflow","light","dark","maxWidth","minWidth","nudgeBottom","nudgeLeft","nudgeRight","nudgeTop","nudgeWidth","offsetOverflow","openOnClick","positionX","positionY","zIndex","absoluteX","absoluteY","activatedBy","activatorFixed","dimensions","top","left","bottom","right","width","height","offsetTop","scrollHeight","offsetLeft","hasJustFocused","hasWindow","inputActivator","isContentActive","pageWidth","pageYOffset","stackClass","computedLeft","a","c","activatorLeft","isNaN","computedTop","hasActivator","$slots","$scopedSlots","absolutePosition","activate","calcLeft","calcXOverflow","calcTop","calcYOverflow","xOverflow","documentHeight","toTop","contentHeight","totalHeight","isOverflowing","callActivate","callDeactivate","checkForPageYOffset","checkActivatorFixed","el","deactivate","onClick","getInnerHeight","getOffsetLeft","getOffsetTop","getRoundedBoundedClientRect","rect","measure","style","sneakPeek","requestAnimationFrame","startTransition","Promise","resolve","updateDimensions"],"mappings":"4IASe,8BAAkD,CAC/DA,KAD+D,YAG/DC,MAAO,CACLC,UAAW,CACTC,KAAM,CAACC,OADE,QAETC,QAAS,GAEXC,WAAY,CACVH,KAAM,CAACC,OADG,QAEVC,QAAS,IAIbE,KAAM,iBAAO,CACXC,iBADW,EAEXC,kBAAcC,IAGhBC,QAAS,CAIPC,WAJO,WAKLC,aAAaC,KAAb,aACAD,aAAaC,KAAb,eAKFC,SAXO,SAWC,KAAyC,WAC/CD,KAAA,aAEA,IAAME,EAAQC,SAAUH,KAAA,UAAF,EAAE,UAAxB,IAEEA,KAAA,wBAAiCI,WAAWC,GAAO,WACnD,WAAgB,CAAEC,MAAF,EAAcC,OAAO,GAArC,IADA,Q,iLC9BFC,EAAa,eAAO,EAAD,KAAzB,QAMe,OAAAA,EAAA,OAAkB,CAC/BtB,KAD+B,cAG/BC,MAAO,CACLsB,UAAW,CACTlB,QADS,KAETmB,UAAY,SAAAC,GACV,MAAO,CAAC,SAAU,UAAUC,SAAS,OAA9B,OAA8B,CAArC,MAGJC,SAPK,QAQLC,kBARK,QASLC,YATK,QAULC,YAAaC,SAGfxB,KAAM,iBAAO,CAEXyB,iBAFW,KAGXC,cAHW,GAIXC,OAAQ,CAAC,QAAS,aAAc,aAJrB,SAKXC,UAAW,KAGbC,MAAO,CACLb,UADK,iBAELO,YAFK,iBAGLD,YAAa,kBAGfQ,QA9B+B,WA+B7B,IAAMC,EAAW,eAAYxB,KAAM,aAAnC,GAEIwB,GAAY,CAAC,SAAU,UAAUZ,SAArC,IACE,eAAa,kGAAb,MAGFZ,KAAA,sBAGFyB,cAxC+B,WAyC7BzB,KAAA,yBAGFH,QAAS,CACP6B,mBADO,WAEL,GACG1B,KAAD,YACAA,KADA,UAECA,KAHH,gBAMAA,KAAA,UAAiBA,KAAjB,wBAGA,IAFA,IAAM2B,EAAOC,OAAA,KAAY5B,KAAzB,WAEA,uBAAwB,CAAnB,IAAM6B,EAAX,KACE7B,KAAA,kCAA2CA,KAAKqB,UAAhD,OAGJS,aAfO,WAgBL,IAAMC,EAAO,eAAQ/B,KAAM,YAAa4B,OAAA,OAAc5B,KAAd,gBAAoC,CAC1EgC,GAAIhC,KADsE,wBAE1EiC,MAAOjC,KAAKkC,6BAFd,GAOA,OAFAlC,KAAA,gBAEA,GAEFkC,uBAzBO,WA0BL,MAAO,CACLC,KADK,SAEL,iBAFK,EAGL,gBAAiBC,OAAOpC,KAAD,YAG3BqC,sBAhCO,WAgCc,WACnB,GAAIrC,KAAJ,SAAmB,MAAO,GAE1B,IAAMqB,EAAN,GAgCA,OA9BIrB,KAAJ,aACEqB,EAAA,WAAwB,SAAAiB,GACtB,kBACA,oBAEFjB,EAAA,WAAwB,SAAAiB,GACtB,kBACA,sBAGFjB,EAAA,MAAmB,SAAAiB,GACjB,IAAM7B,EAAY,eAAlB,GACA,GAAeA,EAAA,QAEf6B,EAAA,kBAEA,YAAiB,EAAjB,UAIAtC,KAAJ,cACEqB,EAAA,MAAmB,SAAAiB,GACjB,kBAEAA,EAAA,kBAEA,YAAiB,EAAjB,WAIJ,GAEFC,aArEO,SAqEK,GAEV,GAAIvC,KAAJ,iBAA2B,OAAOA,KAAP,iBAE3B,IAAIS,EAAJ,KAEA,GAAIT,KAAJ,UAAoB,CAClB,IAAMwC,EAASxC,KAAKc,kBAAoBd,KAAzB,IAAf,SAIES,EAFF,kBAAWT,KAAP,UAEUwC,EAAA,cAAqBxC,KAAjCS,WACUT,KAAKS,UAAV,IAEQT,KAAKS,UAAlB,IAGYT,KAAZS,eAEG,GAAkC,IAA9BT,KAAKmB,cAAcsB,QAAiBzC,KAAKmB,cAAcsB,SAA3D,EAA0E,CAI/E,IAAMC,EAAK1C,KAAKmB,cAAc,GAA9B,kBAOEV,EALAiC,GACAA,EAAA,SADA,QAEAA,EAAA,sBAAyB,SAAAC,GAAD,OAAYA,EAAA,SAAa,CAAC,cAAe,YAAY/B,SAAS+B,EAAA,QAHxF,SAMeD,EAAb,eAEY1C,KAAKmB,cAAc,GAA/B,SAEOmB,IAET7B,EAAa6B,EAAA,eAAmBA,EAAhC,QAKF,OAFAtC,KAAA,mBAEOA,KAAP,kBAEF4C,eAhHO,WAiHL,OAAO,eAAQ5C,KAAM,UAAWA,KAAlB,iBAAd,IAEF6C,cAnHO,WAoHL,IAAMC,EAAN,KACA,MAAO,CACL,YACE,OAAOA,EAAP,UAEF,aACEA,EAAA,cAINC,sBA9HO,WA+HL,GACG/C,KAAD,WACCA,KAFH,kBAOA,IAFA,IAAM2B,EAAOC,OAAA,KAAY5B,KAAzB,WAEA,uBAAwB,CAAnB,IAAM6B,EAAX,KACG7B,KAAA,uCAAuDA,KAAKqB,UAA5D,IAGHrB,KAAA,eAEFgD,eA5IO,WA6ILhD,KAAA,wBACAA,KAAA,sBACAA,KAAA,eACAA,KAAA,0B,oIC7LN,SAASiD,EAAT,GACE,IAAM5D,EAAO,eAAb,GAEA,MAAI,YAAAA,GAAJ,WAA0BA,GAEnBsB,EAAA,WAAiBuC,KAAxB,aAIa,qCAII,CACjBhE,KADiB,aAGjBC,MAAO,CACLgE,OAAQ,CACN5D,SADM,EAENmB,UAAWuC,GAEbG,aAAc,CACZ/D,KADY,OAEZE,QAAS,KAIbE,KAAM,iBAAO,CACX0B,cADW,KAEXkC,aAAa,IAGf/B,MAAO,CACL6B,OADK,WAEHnD,KAAA,eACAA,KAAA,cAEFsD,WALK,WAMHtD,KAAA,UAAeA,KAAf,cAIJuD,YA7BiB,WA6BN,WACTvD,KAAA,WAAe,WACb,GAAI,EAAJ,cAAwB,CACtB,IAAMS,EAAY+C,MAAA,QAAc,EAAd,eAAoC,EAApC,cAAyD,CAAC,EAA5E,eAEA/C,EAAA,SAAkB,SAAAsB,GAChB,GAAKA,EAAL,KACK,MAAL,YAEA,IAAMS,EAAS,QAAa,iBAAb,WACX,EADW,IAEX,MAFJ,YAIA,8BAAiCT,EAAjC,gBAMRR,QAhDiB,WAiDfvB,KAAA,YAAmBA,KAAnB,cAGFyD,YApDiB,WAqDfzD,KAAA,aAGFyB,cAxDiB,WA0Df,IAQE,GANEzB,KAAK0D,MAAMC,SACX3D,KAAK0D,MAAMC,QAFb,YAIE3D,KAAA,qCAA0CA,KAAK0D,MAA/C,SAGE1D,KAAJ,cAAwB,CACtB,IAAMS,EAAY+C,MAAA,QAAcxD,KAAd,eAAoCA,KAApC,cAAyD,CAACA,KAA5E,eACAS,EAAA,SAAkB,SAAAsB,GAChBA,EAAA,KACEA,EAAA,IADF,YAEEA,EAAA,2BAAgCA,EAFlC,SAKJ,MAAOO,GAAKsB,QAAA,SAGhB/D,QAAS,CACPgE,gBADO,WAEL,IAAMC,EAAU,eAAqB9D,KAAD,OAApC,6BAEA,OAAO8D,GAAW,kBAChB,EAAW,KAGfC,WARO,WAmBL,MAVI/D,KAAKgE,eACNhE,KAAK0D,MADJ,SAEF1D,KAFE,kBAKFA,KAAA,SALE,IAMFA,KAAA,QANF,WAOEA,KAAA,SAMAwC,GAFF,IAAIxC,KAAKmD,OAEEc,SAAA,cAAT,cACK,kBAAWjE,KAAP,OAEAiE,SAAA,cAAuBjE,KAAhC,QAGSA,KAAT,OAGF,GAKAwC,EAAA,YAAmBxC,KAAK0D,MAAxB,SAEA1D,KAAA,gBANE,eAAY,2BAAD,OAA4BA,KAAKmD,QAAjC,cAAX,Y,8DC3HR,SAASe,EAAT,GAEE,IADA,IAAMC,EAAN,GACSC,EAAT,EAAoBA,EAAQC,EAA5B,OAA6CD,IAAS,CACpD,IAAME,EAAQD,EAAd,GACIC,EAAA,UAAkBA,EAAtB,YACEH,EAAA,QAEAA,EAAA,WAAAA,EAAO,eAASD,EAAeI,EAA/B,aAIJ,SAIa,+BAAyB,CACtCpF,KADsC,YAGtCO,KAHsC,WAIpC,MAAO,CACL8E,iBADK,EAELC,UAFK,EAGLC,aAAa,IAIjBnD,MAAO,CACLkD,SADK,SACG,GACN,MAGA,IADA,IAAME,EAAiB1E,KAAvB,oBACSoE,EAAT,EAAoBA,EAAQM,EAA5B,OAAmDN,IACjDM,EAAA,iBAKN7E,QAAS,CACP8E,kBADO,WAEL,OAAI3E,KAAJ,gBAAiCkE,EAAelE,KAAtB,WAE1B,IAEF4E,yBANO,WAUL,IAHA,IAAMC,EAAN,GACMH,EAAiB1E,KAAvB,oBAESoE,EAAT,EAAoBA,EAAQM,EAA5B,OAAmDN,IACjDS,EAAA,WAAAA,EAAM,eAASH,EAAA,GAAf,kCAGF,UAEFI,8BAhBO,WAiBL,IAAMD,EAAS,CAAC7E,KAAhB,KAKA,OAJIA,KAAK0D,MAAT,SAAwBmB,EAAA,KAAY7E,KAAK0D,MAAjB,SACpB1D,KAAJ,SAAkB6E,EAAA,KAAY7E,KAAK+E,QAAjB,KAClBF,EAAA,WAAAA,EAAM,eAAS7E,KAAf,6BAEA,O,sJClES,yBAA6B,CAC1Cd,KAD0C,YAG1CO,KAH0C,WAIxC,MAAO,CACLuF,aADK,KAELC,aAFK,KAGLC,eAHK,EAILV,UAAU,IAGdW,SAAU,CACRC,aADQ,WAEN,wBAAWC,OAAwB,OAAO,EAE1C,IAAM1B,EAAU3D,KAAKgF,cAAgBhF,KAAK0D,MAHhC,QAMJU,EAASpE,KAAD,SAEVA,KAAKsF,aAAatF,KAAKiF,cAAgB,CAAvC,IAFJ,EACI,eADU,GAId,aAAIb,EAVM,EAcHjE,SAAP,KAGJN,QAAS,CACPyF,aADO,WAeL,IAdmC,IAAvBC,EAAuB,uDAAzB,GACJC,EAAOxF,KADsB,IAI7ByF,EAAM,CAACzF,KAAD,eAAsB,eAJC,IAQ7B0F,EAAiB,GAAH,sBACfzB,SAAA,uBADkB,4BAAH,eAEfA,SAAA,uBAV8B,+BAc1BG,EAAT,EAAoBA,EAAQsB,EAA5B,OAAmDtB,IAC5CmB,EAAA,SAAiBG,EAAtB,KACED,EAAA,KAAS,eAAUC,EAAnB,KAIJ,OAAOC,KAAA,UAAAA,KAAP,O,wBCnDAnF,EAAa,OAAAoF,EAAA,MAAO,EAAD,OAAzB,QAiBe,OAAApF,EAAA,gBAAoC,CACjDtB,KADiD,WAGjDC,MAAO,CACL0G,cADK,QAELC,MAFK,QAGLC,KAHK,QAILC,SAAU,CACR3G,KAAM,CAACC,OADC,QAERC,QAAS,QAEX0G,SAAU,CAAC3G,OARN,QASL4G,YAAa,CACX7G,KAAM,CAACC,OADI,QAEXC,QAAS,GAEX4G,UAAW,CACT9G,KAAM,CAACC,OADE,QAETC,QAAS,GAEX6G,WAAY,CACV/G,KAAM,CAACC,OADG,QAEVC,QAAS,GAEX8G,SAAU,CACRhH,KAAM,CAACC,OADC,QAERC,QAAS,GAEX+G,WAAY,CACVjH,KAAM,CAACC,OADG,QAEVC,QAAS,GAEXgH,eA7BK,QA8BLC,YA9BK,QA+BLC,UAAW,CACTpH,KADS,OAETE,QAAS,MAEXmH,UAAW,CACTrH,KADS,OAETE,QAAS,MAEXoH,OAAQ,CACNtH,KAAM,CAACC,OADD,QAENC,QAAS,OAIbE,KAAM,iBAAO,CACXmH,UADW,EAEXC,UAFW,EAGXC,YAHW,KAIXC,gBAJW,EAKXC,WAAY,CACVvG,UAAW,CACTwG,IADS,EAETC,KAFS,EAGTC,OAHS,EAITC,MAJS,EAKTC,MALS,EAMTC,OANS,EAOTC,UAPS,EAQTC,aARS,EASTC,WAAY,GAEd9D,QAAS,CACPsD,IADO,EAEPC,KAFO,EAGPC,OAHO,EAIPC,MAJO,EAKPC,MALO,EAMPC,OANO,EAOPC,UAPO,EAQPC,aAAc,IAGlBE,gBA5BW,EA6BXC,WA7BW,EA8BXC,gBA9BW,EA+BXC,iBA/BW,EAgCXC,UAhCW,EAiCXC,YAjCW,EAkCXC,WAlCW,0BAmCX9C,eAAgB,IAGlBC,SAAU,CACR8C,aADQ,WAEN,IAAMC,EAAIlI,KAAKgH,WAAf,UACMmB,EAAInI,KAAKgH,WAAf,QACMoB,IAAiC,IAAhBpI,KAAKmD,OAAmB+E,EAAxB,WAAuCA,EAAxC,OAAtB,EACMjC,EAAWN,KAAA,IAASuC,EAAT,MAAkBC,EAAnC,OACIjB,EAAJ,EAEA,GADAA,GAAQlH,KAAKkH,KAAOkB,GAAiBnC,EAAWiC,EAAxC,OAAR,EACIlI,KAAJ,QAAkB,CAChB,IAAMgG,EAAWqC,MAAM/I,OAAOU,KAAb,WACbkI,EADa,MAEbvC,KAAA,IAASuC,EAAT,MAAkB5I,OAAOU,KAF7B,WAIAkH,GAAQlH,KAAKkH,MAAL,EAAwBgB,EAAhC,MAKF,OAHIlI,KAAJ,YAAoBkH,GAAQ/G,SAASH,KAAjB,YAChBA,KAAJ,aAAqBkH,GAAQ/G,SAASH,KAAjB,aAErB,GAEFsI,YApBQ,WAqBN,IAAMJ,EAAIlI,KAAKgH,WAAf,UACMmB,EAAInI,KAAKgH,WAAf,QACIC,EAAJ,EASA,OAPIjH,KAAJ,MAAciH,GAAOiB,EAAA,OAAWC,EAAlB,SACd,IAAInI,KAAKmD,OAAkB8D,GAAOiB,EAAlC,UACKjB,GAAOiB,EAAA,IAAQlI,KAAf,YACDA,KAAJ,UAAkBiH,GAAOjH,KAAKiH,KAAOiB,EAAZ,OAAuBA,EAA9B,QACdlI,KAAJ,WAAmBiH,GAAO9G,SAASH,KAAhB,WACfA,KAAJ,cAAsBiH,GAAO9G,SAASH,KAAhB,cAEtB,GAEFuI,aAlCQ,WAmCN,QAASvI,KAAKwI,OAAP,aAA6BxI,KAAKyI,aAAlC,aAA8DzI,KAA9D,aAAkFA,KAAzF,iBAIJsB,MAAO,CACLT,SADK,SACG,GACNF,GAAOX,KAAP,kBAEFwE,SAJK,SAIG,GACFxE,KAAJ,WAEAW,EAAMX,KAAH,eAAyBA,KAA5B,mBAEFyG,UATK,mBAULC,UAAW,oBAGbnD,YA1IiD,WA2I/CvD,KAAA,+BAAwBqF,QAG1BxF,QAAS,CACP6I,iBADO,WAEL,MAAO,CACLnB,UADK,EAELE,WAFK,EAGLD,aAHK,EAILP,IAAKjH,KAAK0G,WAAa1G,KAJlB,UAKLmH,OAAQnH,KAAK0G,WAAa1G,KALrB,UAMLkH,KAAMlH,KAAKyG,WAAazG,KANnB,UAOLoH,MAAOpH,KAAKyG,WAAazG,KAPpB,UAQLsH,OARK,EASLD,MAAO,IAGXsB,SAdO,aAePC,SAfO,SAeC,GACN,OAAO,gBAA8B,IAAhB5I,KAAKmD,OACtBnD,KADiB,aAEjBA,KAAK6I,cAAc7I,KAAnB,aAFJ,KAIF8I,QApBO,WAqBL,OAAO,gBAA8B,IAAhB9I,KAAKmD,OACtBnD,KADiB,YAEjBA,KAAK+I,cAAc/I,KAFvB,eAIF6I,cAzBO,SAyBM,KACX,IAAMG,EAAY9B,EAAA,EAAmBlH,KAAnB,UAAlB,GAQA,OALEkH,IADIlH,KAAD,MAAcA,KAAf,QAA8BgJ,EAAlC,EACSrD,KAAA,IAASuB,EAAT,EAAP,GAEOvB,KAAA,MAAP,IAGKuB,EAAOlH,KAAd,iBAEF+I,cApCO,SAoCM,GACX,IAAME,EAAiBjJ,KAAvB,iBACMkJ,EAAQlJ,KAAK+H,YAAnB,EACMtH,EAAYT,KAAKgH,WAAvB,UACMmC,EAAgBnJ,KAAKgH,WAAWrD,QAAtC,OACMyF,EAAcnC,EAApB,EACMoC,EAAgBH,EANE,EAyBxB,OAfIG,GACFrJ,KADE,gBAIFS,EAAA,IAJF,EAMEwG,EAAMjH,KAAK+H,aAAetH,EAAA,IAD1B,GAGS4I,IAAkBrJ,KAAtB,cACLiH,EAAMiC,EAAA,EADyC,GAGtCjC,EAAMjH,KAAN,cAA2BA,KAA/B,gBACLiH,EAAMjH,KAAK+H,YAAX,IAGKd,EAAA,MAAP,GAEFqC,aA/DO,WAgEAtJ,KAAL,WAEAA,KAAA,YAEFuJ,eApEO,WAqELvJ,KAAA,mBAEAA,KAAA,cAEFwJ,oBAzEO,WA0EDxJ,KAAJ,YACEA,KAAA,YAAmBA,KAAK+G,eAAiB,EAAI/G,KAA7C,iBAGJyJ,oBA9EO,WA+EL,QAAIzJ,KAAKmD,OAAT,CACA,IAAIuG,EAAK1J,KAAT,eACA,QAAW,CACT,aAAIqF,OAAA,6BAEF,YADArF,KAAA,mBAGF0J,EAAKA,EAAL,aAEF1J,KAAA,oBAEF2J,WA1FO,aA2FPtH,sBA3FO,WA2Fc,WACbhB,EAAY,kDAAlB,MAEMuI,EAAUvI,EAAhB,MAWA,OATAA,EAAA,MAAmB,SAAAiB,GACb,EAAJ,aACEsH,GAAWA,EAAX,GAGF,YAAiBtH,EAAjB,QACA,YAAiBA,EAAjB,SAGF,GAEFuH,eA3GO,WA4GL,OAAK7J,KAAL,UAEOqF,OAAA,aACLpB,SAAA,gBADF,aAF4B,GAK9B6F,cAjHO,WAkHL,OAAK9J,KAAL,UAEOqF,OAAA,aACLpB,SAAA,gBADF,WAF4B,GAK9B8F,aAvHO,WAwHL,OAAK/J,KAAL,UAEOqF,OAAA,aACLpB,SAAA,gBADF,UAF4B,GAK9B+F,4BA7HO,SA6HoB,GACzB,IAAMC,EAAOP,EAAb,wBACA,MAAO,CACLzC,IAAKtB,KAAA,MAAWsE,EADX,KAEL/C,KAAMvB,KAAA,MAAWsE,EAFZ,MAGL9C,OAAQxB,KAAA,MAAWsE,EAHd,QAIL7C,MAAOzB,KAAA,MAAWsE,EAJb,OAKL5C,MAAO1B,KAAA,MAAWsE,EALb,OAML3C,OAAQ3B,KAAA,MAAWsE,EAAX,UAGZC,QAxIO,SAwIA,GACL,IAAKR,IAAO1J,KAAZ,UAA4B,OAAO,KAEnC,IAAMiK,EAAOjK,KAAKgK,4BAHI,GAMtB,QAAIhK,KAAKmD,OAAkB,CACzB,IAAMgH,EAAQ9E,OAAA,iBAAd,GAEA4E,EAAA,KAAY9J,SAASgK,EAArB,YACAF,EAAA,IAAW9J,SAASgK,EAApB,WAGF,UAEFC,UAvJO,SAuJE,GAAgB,WACvBC,uBAAsB,WACpB,IAAMX,EAAK,QAAX,QAEKA,GAAL,SAAWA,EAAA,eAKXA,EAAA,6BACArJ,IACAqJ,EAAA,sBANErJ,QASNiK,gBArKO,WAqKQ,WACb,OAAO,IAAIC,SAAc,SAAAC,GAAO,OAAIH,uBAAsB,WACxD,kBAAuB,iBAAsB,EAA7C,SACAG,WAGJC,iBA3KO,WA2KS,WACdzK,KAAA,+BAAwBqF,OACxBrF,KAAA,sBACAA,KAAA,sBACAA,KAAA,UAAiBiE,SAAA,gBAAjB,YAEA,IAAM+C,EAAkB,CACtBvG,UAAW,kBAAKT,KAAKgH,WAAWvG,WAChCkD,QAAS,kBAAK3D,KAAKgH,WAAWrD,UAIhC,IAAK3D,KAAD,cAAsBA,KAA1B,SACEgH,EAAA,UAAuBhH,KAAvB,uBACK,CACL,IAAMS,EAAYT,KAAlB,eACA,MAAgB,OAEhBgH,EAAA,UAAuBhH,KAAKkK,QAA5B,GACAlD,EAAA,qBAAkCvG,EAAlC,YACA,IAAIT,KAAKmD,OAGP6D,EAAA,oBAAiCvG,EAAjC,UAEAuG,EAAA,sBAKJhH,KAAA,WAAe,WACb,kBAAuBgH,EAAA,QAAqB,UAAa,QAAzD,UAEA","file":"js/chunk-4821e875.e3a9bc27.js","sourcesContent":["import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n","// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype Listeners = Dictionary<(e: MouseEvent & KeyboardEvent & FocusEvent) => void>\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n    openOnFocus: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n    listeners: {} as Listeners,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Listeners = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: FocusEvent) => {\n          this.getActivator(e)\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      this.activatorElement = activator\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    // IE11 Fix\n    try {\n      if (\n        this.$refs.content &&\n        this.$refs.content.parentNode\n      ) {\n        this.$refs.content.parentNode.removeChild(this.$refs.content)\n      }\n\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n        activator.forEach(node => {\n          node.elm &&\n            node.elm.parentNode &&\n            node.elm.parentNode.removeChild(node.elm)\n        })\n      }\n    } catch (e) { console.log(e) }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport mixins from '../../util/mixins'\nimport { VOverlay } from '../../components/VOverlay'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n  overlay?: InstanceType<typeof VOverlay>\n}\n\ninterface DependentInstance extends Vue {\n  isActive?: boolean\n  isDependent?: boolean\n}\n\nfunction searchChildren (children: Vue[]): DependentInstance[] {\n  const results = []\n  for (let index = 0; index < children.length; index++) {\n    const child = children[index] as DependentInstance\n    if (child.isActive && child.isDependent) {\n      results.push(child)\n    } else {\n      results.push(...searchChildren(child.$children))\n    }\n  }\n\n  return results\n}\n\n/* @vue/component */\nexport default mixins<options>().extend({\n  name: 'dependent',\n\n  data () {\n    return {\n      closeDependents: true,\n      isActive: false,\n      isDependent: true,\n    }\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) return\n\n      const openDependents = this.getOpenDependents()\n      for (let index = 0; index < openDependents.length; index++) {\n        openDependents[index].isActive = false\n      }\n    },\n  },\n\n  methods: {\n    getOpenDependents (): any[] {\n      if (this.closeDependents) return searchChildren(this.$children)\n\n      return []\n    },\n    getOpenDependentElements (): HTMLElement[] {\n      const result = []\n      const openDependents = this.getOpenDependents()\n\n      for (let index = 0; index < openDependents.length; index++) {\n        result.push(...openDependents[index].getClickableDependentElements())\n      }\n\n      return result\n    },\n    getClickableDependentElements (): HTMLElement[] {\n      const result = [this.$el]\n      if (this.$refs.content) result.push(this.$refs.content)\n      if (this.overlay) result.push(this.overlay.$el as HTMLElement)\n      result.push(...this.getOpenDependentElements())\n\n      return result\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n","// Mixins\nimport Positionable from '../positionable'\nimport Stackable from '../stackable'\nimport Activatable from '../activatable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nconst baseMixins = mixins(\n  Stackable,\n  Positionable,\n  Activatable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  attach: boolean | string | Element\n  offsetY: boolean\n  offsetX: boolean\n  $refs: {\n    content: HTMLElement\n    activator: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'menuable',\n\n  props: {\n    allowOverflow: Boolean,\n    light: Boolean,\n    dark: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0,\n    },\n    offsetOverflow: Boolean,\n    openOnClick: Boolean,\n    positionX: {\n      type: Number,\n      default: null,\n    },\n    positionY: {\n      type: Number,\n      default: null,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null,\n    },\n  },\n\n  data: () => ({\n    absoluteX: 0,\n    absoluteY: 0,\n    activatedBy: null as EventTarget | null,\n    activatorFixed: false,\n    dimensions: {\n      activator: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n        offsetLeft: 0,\n      },\n      content: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n      },\n    },\n    hasJustFocused: false,\n    hasWindow: false,\n    inputActivator: false,\n    isContentActive: false,\n    pageWidth: 0,\n    pageYOffset: 0,\n    stackClass: 'v-menu__content--active',\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const activatorLeft = (this.attach !== false ? a.offsetLeft : a.left) || 0\n      const minWidth = Math.max(a.width, c.width)\n      let left = 0\n      left += this.left ? activatorLeft - (minWidth - a.width) : activatorLeft\n      if (this.offsetX) {\n        const maxWidth = isNaN(Number(this.maxWidth))\n          ? a.width\n          : Math.min(a.width, Number(this.maxWidth))\n\n        left += this.left ? -maxWidth : a.width\n      }\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = 0\n\n      if (this.top) top += a.height - c.height\n      if (this.attach !== false) top += a.offsetTop\n      else top += a.top + this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator (): boolean {\n      return !!this.$slots.activator || !!this.$scopedSlots.activator || !!this.activator || !!this.inputActivator\n    },\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    },\n    positionX: 'updateDimensions',\n    positionY: 'updateDimensions',\n  },\n\n  beforeMount () {\n    this.hasWindow = typeof window !== 'undefined'\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: 0,\n        offsetLeft: 0,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0,\n      }\n    },\n    activate () {},\n    calcLeft (menuWidth: number) {\n      return convertToUnit(this.attach !== false\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft, menuWidth))\n    },\n    calcTop () {\n      return convertToUnit(this.attach !== false\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop))\n    },\n    calcXOverflow (left: number, menuWidth: number) {\n      const xOverflow = left + menuWidth - this.pageWidth + 12\n\n      if ((!this.left || this.right) && xOverflow > 0) {\n        left = Math.max(left - xOverflow, 0)\n      } else {\n        left = Math.max(left, 12)\n      }\n\n      return left + this.getOffsetLeft()\n    },\n    calcYOverflow (top: number) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.pageYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.pageYOffset && !this.allowOverflow) {\n        top = this.pageYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.activatorFixed ? 0 : this.getOffsetTop()\n      }\n    },\n    checkActivatorFixed () {\n      if (this.attach !== false) return\n      let el = this.getActivator()\n      while (el) {\n        if (window.getComputedStyle(el).position === 'fixed') {\n          this.activatorFixed = true\n          return\n        }\n        el = el.offsetParent as HTMLElement\n      }\n      this.activatorFixed = false\n    },\n    deactivate () {},\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      const onClick = listeners.click\n\n      listeners.click = (e: MouseEvent & KeyboardEvent & FocusEvent) => {\n        if (this.openOnClick) {\n          onClick && onClick(e)\n        }\n\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      }\n\n      return listeners\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getOffsetLeft () {\n      if (!this.hasWindow) return 0\n\n      return window.pageXOffset ||\n        document.documentElement.scrollLeft\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el: Element) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height),\n      }\n    },\n    measure (el: HTMLElement) {\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.attach !== false) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft!)\n        rect.top = parseInt(style.marginTop!)\n      }\n\n      return rect\n    },\n    sneakPeek (cb: () => void) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || el.style.display !== 'none') {\n          cb()\n          return\n        }\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      return new Promise<void>(resolve => requestAnimationFrame(() => {\n        this.isContentActive = this.hasJustFocused = this.isActive\n        resolve()\n      }))\n    },\n    updateDimensions () {\n      this.hasWindow = typeof window !== 'undefined'\n      this.checkActivatorFixed()\n      this.checkForPageYOffset()\n      this.pageWidth = document.documentElement.clientWidth\n\n      const dimensions: any = {\n        activator: { ...this.dimensions.activator },\n        content: { ...this.dimensions.content },\n      }\n\n      // Activator should already be shown\n      if (!this.hasActivator || this.absolute) {\n        dimensions.activator = this.absolutePosition()\n      } else {\n        const activator = this.getActivator()\n        if (!activator) return\n\n        dimensions.activator = this.measure(activator)\n        dimensions.activator.offsetLeft = activator.offsetLeft\n        if (this.attach !== false) {\n          // account for css padding causing things to not line up\n          // this is mostly for v-autocomplete, hopefully it won't break anything\n          dimensions.activator.offsetTop = activator.offsetTop\n        } else {\n          dimensions.activator.offsetTop = 0\n        }\n      }\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        this.$refs.content && (dimensions.content = this.measure(this.$refs.content))\n\n        this.dimensions = dimensions\n      })\n    },\n  },\n})\n"],"sourceRoot":""}